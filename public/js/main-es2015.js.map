{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'meuapp';\n    public posts: Post[]\n\n    constructor(public dialog: MatDialog, public postService: PostService){}\n\n    ngOnInit() {\n        this.posts = this.postService.posts\n    }\n\n    openDialog() {\n        const dialogRef = this.dialog.open(PostDialogComponent, {\n            width: '600px'\n        })\n        dialogRef.afterClosed().subscribe(result => {\n            if(result)\n                this.postService.salvar(result.post, result.arquivo)\n        })\n    }\n}\n","<mat-toolbar color=\"primary\">\n    <span>Projeto Laravel + Angular</span>\n</mat-toolbar>\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\n    <app-post *ngFor = \"let p of posts\" [post] = \"p\"></app-post>\n</div>\n\n<button mat-fab color=\"primary\" class=\"float-button\" (click) = \"openDialog()\">\n    <mat-icon>add</mat-icon>\n</button>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PostComponent,\n        PostDialogComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule, \n        ReactiveFormsModule,\n        FlexLayoutModule,\n        HttpClientModule,\n\n        MatButtonModule,\n        MatInputModule,\n        MatSelectModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatDividerModule,\n        MatDialogModule,\n        MatChipsModule,\n        MatBadgeModule,\n\n    ],\n    providers: [\n        \n    ],\n    entryComponents: [\n        PostDialogComponent\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n    public nomearquivo: string = '';\n\n    public dados = {\n        post: new Post(\"\", \"\", \"\", \"\", \"\"),\n        arquivo: null\n    };\n\n    constructor(public dialogref: MatDialogRef<PostDialogComponent>) { }\n\n    ngOnInit(): void {\n    }\n    mudouarquivo(event) {\n        this.nomearquivo = event.target.files[0].name\n        this.dados.arquivo = event.target.files[0]\n    }\n\n    salvar() {\n        this.dialogref.close(this.dados)\n    }\n\n    cancelar() {\n        this.dialogref.close(null)\n    }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)] = \"dados.post.nome\">\n            <mat-hint>Digite aqui o seu nome</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu email\" [(ngModel)] = \"dados.post.email\">\n            <mat-hint>Digite aqui o seu email</mat-hint>\n        </mat-form-field>\n        \n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da mensagem\" [(ngModel)] = \"dados.post.titulo\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da mensagem\" [(ngModel)] = \"dados.post.subtitulo\">\n        </mat-form-field>\n\n    </div>\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui a sua mensagem\" [(ngModel)] = \"dados.post.mensagem\"></textarea>\n    </mat-form-field>\n</div>\n<input type=\"file\" style=\"display: none;\" #fileinput (change) = \"mudouarquivo($event)\">\n<button mat-stroked-button color=\"primary\" (click) = \"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma foto \n</button>\n<p *ngIf = \"nomearquivo != ''\">\n    <strong>Arquivo: </strong>{{nomearquivo}}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n<br><br>\n<div style=\"text-align: center;\">\n    <button mat-button color=\"primary\" (click) = \"salvar()\">OK</button>\n    <button mat-button color=\"warning\" (click) = \"cancelar()\">Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PostService {\n\n    public posts: Post[] = []\n\n    constructor(private http: HttpClient) {\n        this.http.get(\"http://localhost/laravel/public/api\").subscribe((posts: any[]) => posts.forEach(e => this.posts.push(new Post(e.nome, e.titulo, e.subtitulo, e.email, e.mensagem, e.arquivo, e.id, e.likes))))\n    }\n\n    salvar(post: Post, file: File) {\n        const uploadData = new FormData()\n        uploadData.append(\"nome\", post.nome)\n        uploadData.append(\"email\", post.email)\n        uploadData.append(\"titulo\", post.titulo)\n        uploadData.append(\"subtitulo\", post.subtitulo)\n        uploadData.append(\"mensagem\", post.mensagem)\n        uploadData.append(\"arquivo\", file, file.name)\n        this.http.post(\"http://localhost/laravel/public/api\", uploadData, {observe: 'events'}).subscribe((event: any) => {\n            if(event.type == HttpEventType.Response){\n                let e: any = event.body\n                this.posts.push(new Post(e.nome, e.titulo, e.subtitulo, e.email, e.mensagem, e.arquivo, e.id, e.likes))\n            } \n        })\n    }\n\n    like(id: number) {\n        this.http.get(`http://localhost/laravel/public/api/like/${id}`).subscribe((event: any) => {\n            let p = this.posts.find(p => p.id == id)\n            p.likes = event.likes\n        })\n    }\n\n    apagar(id: number) {\n        this.http.delete(`http://localhost/laravel/public/api/${id}`).subscribe(event => {\n            let i = this.posts.findIndex(p => p.id == id)\n            if(i >= 0)\n                this.posts.splice(i, 1)\n        })\n    }\n\n}\n","export class Post {\r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ) {\r\n        \r\n    }\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n    selector: 'app-post',\n    templateUrl: './post.component.html',\n    styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n    @Input() post: Post\n\n    constructor(private postService: PostService) { }\n\n    ngOnInit(): void {\n    }\n\n    like() {\n        this.postService.like(this.post.id)\n    }\n\n    apagar() {\n        this.postService.apagar(this.post.id)\n    }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n        <div mat-card-avatar></div>\n        <mat-card-title>{{post.titulo}}</mat-card-title>\n        <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"http://localhost/laravel/public/storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n        <p>\n            {{post.mensagem}}\n        </p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-button color=\"primary\" (click) = \"like()\">LIKE</button>\n        <button mat-button color = \"accent\" (click) = \"apagar()\">APAGAR</button>\n        <mat-icon color=\"warn\" *ngIf = \"post.likes > 0\" [matBadge] = \"post.likes\" matBadgePosition = \"above after\" matBadgeColor = \"warn\" matBadgeOverLap = \"false\">favorite</mat-icon>\n    </mat-card-actions>\n</mat-card>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}