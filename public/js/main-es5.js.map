{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/post-dialog/post-dialog.component.ts","webpack:///src/app/post-dialog/post-dialog.component.html","webpack:///src/app/post.service.ts","webpack:///src/app/post.ts","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dialog","postService","title","posts","dialogRef","open","width","afterClosed","subscribe","result","salvar","post","arquivo","openDialog","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","entryComponents","bootstrap","PostDialogComponent","dialogref","nomearquivo","dados","event","target","files","name","close","mudouarquivo","cancelar","PostService","http","get","forEach","push","nome","titulo","subtitulo","email","mensagem","likes","file","uploadData","FormData","append","observe","type","Response","body","p","find","i","findIndex","splice","providedIn","Post","PostComponent","like","apagar","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'meuapp';\n    public posts: Post[]\n\n    constructor(public dialog: MatDialog, public postService: PostService){}\n\n    ngOnInit() {\n        this.posts = this.postService.posts\n    }\n\n    openDialog() {\n        const dialogRef = this.dialog.open(PostDialogComponent, {\n            width: '600px'\n        })\n        dialogRef.afterClosed().subscribe(result => {\n            if(result)\n                this.postService.salvar(result.post, result.arquivo)\n        })\n    }\n}\n","<mat-toolbar color=\"primary\">\n    <span>Projeto Laravel + Angular</span>\n</mat-toolbar>\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\n    <app-post *ngFor = \"let p of posts\" [post] = \"p\"></app-post>\n</div>\n\n<button mat-fab color=\"primary\" class=\"float-button\" (click) = \"openDialog()\">\n    <mat-icon>add</mat-icon>\n</button>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PostComponent,\n        PostDialogComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule, \n        ReactiveFormsModule,\n        FlexLayoutModule,\n        HttpClientModule,\n\n        MatButtonModule,\n        MatInputModule,\n        MatSelectModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatDividerModule,\n        MatDialogModule,\n        MatChipsModule,\n        MatBadgeModule,\n\n    ],\n    providers: [\n        \n    ],\n    entryComponents: [\n        PostDialogComponent\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n    public nomearquivo: string = '';\n\n    public dados = {\n        post: new Post(\"\", \"\", \"\", \"\", \"\"),\n        arquivo: null\n    };\n\n    constructor(public dialogref: MatDialogRef<PostDialogComponent>) { }\n\n    ngOnInit(): void {\n    }\n    mudouarquivo(event) {\n        this.nomearquivo = event.target.files[0].name\n        this.dados.arquivo = event.target.files[0]\n    }\n\n    salvar() {\n        this.dialogref.close(this.dados)\n    }\n\n    cancelar() {\n        this.dialogref.close(null)\n    }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)] = \"dados.post.nome\">\n            <mat-hint>Digite aqui o seu nome</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu email\" [(ngModel)] = \"dados.post.email\">\n            <mat-hint>Digite aqui o seu email</mat-hint>\n        </mat-form-field>\n        \n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da mensagem\" [(ngModel)] = \"dados.post.titulo\">\n        </mat-form-field>\n        \n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da mensagem\" [(ngModel)] = \"dados.post.subtitulo\">\n        </mat-form-field>\n\n    </div>\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui a sua mensagem\" [(ngModel)] = \"dados.post.mensagem\"></textarea>\n    </mat-form-field>\n</div>\n<input type=\"file\" style=\"display: none;\" #fileinput (change) = \"mudouarquivo($event)\">\n<button mat-stroked-button color=\"primary\" (click) = \"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma foto \n</button>\n<p *ngIf = \"nomearquivo != ''\">\n    <strong>Arquivo: </strong>{{nomearquivo}}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n<br><br>\n<div style=\"text-align: center;\">\n    <button mat-button color=\"primary\" (click) = \"salvar()\">OK</button>\n    <button mat-button color=\"warning\" (click) = \"cancelar()\">Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PostService {\n\n    public posts: Post[] = []\n\n    constructor(private http: HttpClient) {\n        this.http.get(\"http://localhost/laravel/public/api\").subscribe((posts: any[]) => posts.forEach(e => this.posts.push(new Post(e.nome, e.titulo, e.subtitulo, e.email, e.mensagem, e.arquivo, e.id, e.likes))))\n    }\n\n    salvar(post: Post, file: File) {\n        const uploadData = new FormData()\n        uploadData.append(\"nome\", post.nome)\n        uploadData.append(\"email\", post.email)\n        uploadData.append(\"titulo\", post.titulo)\n        uploadData.append(\"subtitulo\", post.subtitulo)\n        uploadData.append(\"mensagem\", post.mensagem)\n        uploadData.append(\"arquivo\", file, file.name)\n        this.http.post(\"http://localhost/laravel/public/api\", uploadData, {observe: 'events'}).subscribe((event: any) => {\n            if(event.type == HttpEventType.Response){\n                let e: any = event.body\n                this.posts.push(new Post(e.nome, e.titulo, e.subtitulo, e.email, e.mensagem, e.arquivo, e.id, e.likes))\n            } \n        })\n    }\n\n    like(id: number) {\n        this.http.get(`http://localhost/laravel/public/api/like/${id}`).subscribe((event: any) => {\n            let p = this.posts.find(p => p.id == id)\n            p.likes = event.likes\n        })\n    }\n\n    apagar(id: number) {\n        this.http.delete(`http://localhost/laravel/public/api/${id}`).subscribe(event => {\n            let i = this.posts.findIndex(p => p.id == id)\n            if(i >= 0)\n                this.posts.splice(i, 1)\n        })\n    }\n\n}\n","export class Post {\r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ) {\r\n        \r\n    }\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n    selector: 'app-post',\n    templateUrl: './post.component.html',\n    styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n    @Input() post: Post\n\n    constructor(private postService: PostService) { }\n\n    ngOnInit(): void {\n    }\n\n    like() {\n        this.postService.like(this.post.id)\n    }\n\n    apagar() {\n        this.postService.apagar(this.post.id)\n    }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n        <div mat-card-avatar></div>\n        <mat-card-title>{{post.titulo}}</mat-card-title>\n        <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"http://localhost/laravel/public/storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n        <p>\n            {{post.mensagem}}\n        </p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-button color=\"primary\" (click) = \"like()\">LIKE</button>\n        <button mat-button color = \"accent\" (click) = \"apagar()\">APAGAR</button>\n        <mat-icon color=\"warn\" *ngIf = \"post.likes > 0\" [matBadge] = \"post.likes\" matBadgePosition = \"above after\" matBadgeColor = \"warn\" matBadgeOverLap = \"false\">favorite</mat-icon>\n    </mat-card-actions>\n</mat-card>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}